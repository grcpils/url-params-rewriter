{"version":3,"sources":["url-rewriter.js"],"names":["urlCurrentParam","getAllUrlParams","urlRewriterItems","document","getElementsByClassName","regex","_iterator","s","_step","n","done","item","value","urlParam","href","urlBase","match","newUrlParam","_objectSpread","urlParamConstructor","url","params","key","newUrl","first","queryString","split","window","location","search","slice","obj","arr","i","length","a","paramName","paramValue","toLowerCase","replace","index","push"],"mappings":"y3DAAA,I,MAAAA,gBAAAC,kBACAC,iBAAAC,SAAAC,uBAAA,gBACAC,MAAA,0B,qCAEAH,kB,IAAA,IAAAI,UAAAC,MAAAC,MAAAF,UAAAG,KAAAC,MAAA,CAAAC,KAAAH,MAAAI,MACA,IAAAC,SAAAZ,gBAAAU,KAAAG,MACAC,QAAAJ,KAAAG,KAAAE,MAAAX,OACAY,YAAAC,cAAAA,cAAA,GAAAL,UAAAb,iBACAW,KAAAG,KAAAK,oBAAAJ,QAAA,GAAAE,c,8CAGA,SAAAE,oBAAAC,EAAAC,GACA,IAZAC,EAYAC,EAAAH,EACAI,GAAA,EAbA,IAAAF,KAAAD,GACA,IAAAG,GACAD,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GAeAE,GAAA,GAEAD,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GAfA,OAAAC,EAEA,SAAAtB,gBAAAmB,GAoBA,IAAAK,EAAAL,EAAAA,EAAAM,MAAA,KAAA,GAAAC,OAAAC,SAAAC,OAAAC,MAAA,GAnBAC,EAAA,GACApB,GAAAA,EAyBA,IAFA,IAAAqB,GAtBAP,EAAAA,EAAAC,MAAA,KAAA,IAsBAA,MAAA,KAEAO,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CACA,IAnBAX,EAmBAa,EAAAH,EAAAC,GAAAP,MAAA,KACAU,EAAAD,EAAA,GACAE,OAAA,IAAAF,EAAA,IAAAA,EAAA,GAxBAC,EAAAA,EAAAE,cACA,iBAAAD,IAAAA,EAAAA,EAAAC,eACAF,EAAApB,MAAA,gBAEAO,EADAD,EAAAc,EAAAG,QAAA,aAAA,OACAhB,EAAAA,GAAAA,IAEAa,EAAApB,MAAA,aACAO,EAAAA,YAAAA,KAAAA,GAAAA,GACAQ,EAAAT,GAAAkB,GAAAH,GA6BAN,EAAAT,GAAAmB,KAAAJ,IAGAN,EAAAK,IA1BAL,EAAAK,IAAA,iBAAAL,EAAAK,KACAL,EAAAK,GAAA,CAAAL,EAAAK,KA6BAL,EAAAK,GAAAK,KAAAJ,IA/BAN,EAAAK,GAAAC,EAUA,OAAAN","file":"url-rewriter.min.js","sourcesContent":["var urlCurrentParam = getAllUrlParams();\nvar urlRewriterItems = document.getElementsByClassName('url-rewriter');\nconst regex = \"^https:\\/\\/[a-zA-Z0-9.]*\\/\";\n\nfor (item of urlRewriterItems) {\n  var urlParam = getAllUrlParams(item.href);\n  var urlBase = item.href.match(regex);\n  var newUrlParam = {...urlParam, ...urlCurrentParam};\n  item.href = urlParamConstructor(urlBase[0], newUrlParam);\n}\n\nfunction urlParamConstructor(url, params) {\n  var newUrl = url;\n  var first = true;\n  for (var key in params) {\n    if (first === true) {\n      newUrl = newUrl + \"?\" + key + \"=\" + params[key];\n      first = false\n    } else {\n      newUrl = newUrl + \"&\" + key + \"=\" + params[key];\n    }\n  }\n  return newUrl;\n}\n\nfunction getAllUrlParams(url) {\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n  var obj = {};\n  \n  if (queryString) {\n  queryString = queryString.split('#')[0];\n  var arr = queryString.split('&');\n  \n  for (var i = 0; i < arr.length; i++) {\n    var a = arr[i].split('=');\n    var paramName = a[0];\n    var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n  \n    paramName = paramName.toLowerCase();\n    if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n  \n    if (paramName.match(/\\[(\\d+)?\\]$/)) {\n      var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n      if (!obj[key]) obj[key] = [];\n  \n      if (paramName.match(/\\[\\d+\\]$/)) {\n        var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n        obj[key][index] = paramValue;\n      } else {\n        obj[key].push(paramValue);\n      }\n    } else {\n      if (!obj[paramName]) {\n        obj[paramName] = paramValue;\n      } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n        obj[paramName] = [obj[paramName]];\n        obj[paramName].push(paramValue);\n      } else {\n        obj[paramName].push(paramValue);\n      }\n    }\n  }\n  }\n  return obj;\n  }"]}