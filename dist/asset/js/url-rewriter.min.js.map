{"version":3,"sources":["url-rewriter.js"],"names":["urlCurrentParam","getAllUrlParams","urlRewriterItems","document","getElementsByClassName","regex","urlParamConstructor","url","params","key","newUrl","first","window","queryString","split","location","search","slice","item","arr","i","length","a","paramName","paramValue","toLowerCase","match","index","exec","obj","push","addEventListener","_iterator","_createForOfIteratorHelper","s","_step","n","done","value","urlParam","href","urlBase","newUrlParam","_objectSpread","err","e","f"],"mappings":"y3DAAA,IAAAA,gBAAAC,kBACAC,iBAAAC,SAAAC,uBAAA,gBACAC,MAAA,qCAWA,SAAAC,oBAAAC,EAAAC,GAbA,IAEAC,EAFAC,EAAAH,EACAI,GAAA,EACA,IAAAF,KAAAD,GAEAI,IAAAA,GAAAF,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GAAAE,GAAA,GAAAD,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GAEA,OAAAC,EAEA,SAAAT,gBAAAM,GAoBA,IAAAM,EAAAN,EAAAA,EAAAO,MAAA,KAAA,GAAAF,OAAAG,SAAAC,OAAAC,MAAA,GAnBAC,EAAAA,GALA,GAAAL,EAAA,IAAA,IAAAM,GAAAN,EAAAA,EAAAC,MAAA,KAAA,IAAAA,MAAA,KAAAM,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CAOA,IAOAV,EAPAY,EAAAH,EAAAC,GAAAN,MAAA,KA0BAS,EAAAD,EAAA,GAxBAE,OAAA,IAAAF,EAAA,IAAAA,EAAA,GAEAC,EAAAA,EAAAE,cA0BA,iBAAAD,IAAAA,EAAAA,EAAAC,eAxBAF,EAAAG,MAAA,gBAEAf,EADAD,EAAAA,EAAAA,QAAAA,aAAAA,OACAC,EAAAA,GAAAA,IAEAD,EAAAA,MAAAA,aACAiB,EAAA,YAAAC,KAAAL,GAAA,GACAM,EAAApB,GAAAkB,GAAAH,GACAK,EAAApB,GAAAqB,KAAAN,IAGAK,EAAAN,IAEAM,EAAAN,IAAA,iBAAAM,EAAAN,KA4BAM,EAAAN,GAAA,CAAAM,EAAAN,KA1BAM,EAAAN,GAAAO,KAAAN,IAHAK,EAAAN,GAAAC,EAUA,OAAAK,EAlCAjB,OAAAmB,iBAAA,OAAA,WAAA,IAAAC,EAAAC,2BACA/B,kBADA,IACA,IAAA8B,EAAAE,MAAAC,EAAAH,EAAAI,KAAAC,MAAA,CAAA,IAAAnB,EAAAiB,EAAAG,MACAC,EAAAtC,gBAAAiB,EAAAsB,MACAC,EAAAvB,EAAAsB,KAAAd,MAAArB,OACAqC,EAAAC,cAAAA,cAAA,GAAAJ,GAAAvC,iBACAkB,EAAAsB,KAAAlC,oBAAAmC,EAAA,GAAAC,IALA,MAAAE,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc","file":"url-rewriter.min.js","sourcesContent":["var urlCurrentParam = getAllUrlParams();\nvar urlRewriterItems = document.getElementsByClassName('url-rewriter');\nconst regex = \"^(https|http):\\/\\/[a-zA-Z0-9.\\/:]*\\/|\\?\";\n\nwindow.addEventListener('load', function()Â {\n  for (var item of urlRewriterItems) {\n    var urlParam = getAllUrlParams(item.href);\n    var urlBase = item.href.match(regex);\n    var newUrlParam = {...urlParam, ...urlCurrentParam};\n    item.href = urlParamConstructor(urlBase[0], newUrlParam);\n  }\n})\n\nfunction urlParamConstructor(url, params) {\n  var newUrl = url;\n  var first = true;\n  for (var key in params) {\n    if (first === true) {\n      newUrl = newUrl + \"?\" + key + \"=\" + params[key];\n      first = false\n    } else {\n      newUrl = newUrl + \"&\" + key + \"=\" + params[key];\n    }\n  }\n  return newUrl;\n}\n\nfunction getAllUrlParams(url) {\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n  var obj = {};\n  \n  if (queryString) {\n  queryString = queryString.split('#')[0];\n  var arr = queryString.split('&');\n  \n  for (var i = 0; i < arr.length; i++) {\n    var a = arr[i].split('=');\n    var paramName = a[0];\n    var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n  \n    paramName = paramName.toLowerCase();\n    if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n  \n    if (paramName.match(/\\[(\\d+)?\\]$/)) {\n      var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n      if (!obj[key]) obj[key] = [];\n  \n      if (paramName.match(/\\[\\d+\\]$/)) {\n        var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n        obj[key][index] = paramValue;\n      } else {\n        obj[key].push(paramValue);\n      }\n    } else {\n      if (!obj[paramName]) {\n        obj[paramName] = paramValue;\n      } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n        obj[paramName] = [obj[paramName]];\n        obj[paramName].push(paramValue);\n      } else {\n        obj[paramName].push(paramValue);\n      }\n    }\n  }\n  }\n  return obj;\n  }"]}