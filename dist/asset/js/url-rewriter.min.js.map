{"version":3,"sources":["url-rewriter.js"],"names":["urlCurrentParam","getAllUrlParams","urlRewriterItems","document","getElementsByClassName","regex","_iterator","s","_step","n","done","item","value","urlParam","href","urlBase","match","newUrlParam","_objectSpread","console","log","error","concat","urlParamConstructor","url","params","key","newUrl","first","queryString","split","window","location","search","slice","obj","i","arr","length","a","paramName","paramValue","toLowerCase","index","exec","push"],"mappings":"y3DAAA,I,MAAAA,gBAAAC,kBACAC,iBAAAC,SAAAC,uBAAA,gBACAC,MAAA,mC,qCAEAH,kB,IAAA,IAAAI,UAAAC,MAAAC,MAAAF,UAAAG,KAAAC,MAAA,CAAA,IAAAC,KAAAH,MAAAI,MACAC,SAAAZ,gBAAAU,KAAAG,MACAC,QAAAJ,KAAAG,KAAAE,MAAAX,OACAY,YAAAC,cAAAA,cAAA,GAAAL,UAAAb,iBACAmB,QAAAC,IAAAP,UACA,MAAAE,SACAI,QAAAE,MAAA,gBAAAC,OAAAX,KAAAG,KAAA,+FAEAH,KAAAG,KAAAS,oBAAAR,QAAA,GAAAE,c,8CAXA,SAAAM,oBAAAC,EAAAC,GACA,IAgBAC,EAhBAC,EAAAH,EAeAI,GAAA,EACA,IAAAF,KAAAD,GACA,IAAAG,GACAD,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GACAE,GAAA,GAjBAD,EAAAA,EAAA,IAAAD,EAAA,IAAAD,EAAAC,GAsBA,OAAAC,EAlBAR,SAAAA,gBAAAA,GAsBA,IAAAU,EAAAL,EAAAA,EAAAM,MAAA,KAAA,GAAAC,OAAAC,SAAAC,OAAAC,MAAA,GArBAC,EAAA,GAEA,GAAAN,EA0BA,IAzBAlB,IAAAA,GAsBAkB,EAAAA,EAAAC,MAAA,KAAA,IAtBAnB,MAAAA,KAyBAyB,EAAA,EAAAA,EAAAC,EAAAC,OAAAF,IAAA,CACA,IAlBAT,EAkBAY,EAAAF,EAAAD,GAAAN,MAAA,KACAU,EAAAD,EAAA,GACAE,OAAA,IAAAF,EAAA,IAAAA,EAAA,GAEAC,EAAAA,EAAAE,cA3BA,iBAAAD,GACA,QAAAD,IACAC,EAAAA,EAAAC,eAEAF,EAAAxB,MAAA,gBAEAY,EADAD,EAAAA,EAAAA,QAAAA,aAAAA,OACAC,EAAAA,GAAAA,IAEAD,EAAAA,MAAAA,aACAgB,EAAA,YAAAC,KAAAJ,GAAA,GACAL,EAAAT,GAAAiB,GAAAF,GACAN,EAAAT,GAAAmB,KAAAJ,IAGAN,EAAAK,IAEAL,EAAAK,IAAA,iBAAAL,EAAAK,KA+BAL,EAAAK,GAAA,CAAAL,EAAAK,KA7BAL,EAAAK,GAAAK,KAAAJ,IAHAN,EAAAK,GAAAC,EAUA,OAAAN","file":"url-rewriter.min.js","sourcesContent":["var urlCurrentParam = getAllUrlParams();\nvar urlRewriterItems = document.getElementsByClassName('url-rewriter');\nconst regex = \"^(https|http)\\:\\/\\/[a-zA-Z0-9.\\/:]*\\/\";\n\nfor (var item of urlRewriterItems) {\n  var urlParam = getAllUrlParams(item.href);\n  var urlBase = item.href.match(regex);\n  var newUrlParam = {...urlParam, ...urlCurrentParam};\n  console.log(urlParam);\n  if (urlBase == null) {\n    console.error(`base url for ${item.href} is not correct or doesn't match the correct patern ! (/^(https|http)\\:\\/\\/[a-zA-Z0-9.\\/:]*\\//)`);\n  }\n  item.href = urlParamConstructor(urlBase[0], newUrlParam);\n}\n\nfunction urlParamConstructor(url, params) {\n  var newUrl = url;\n  var first = true;\n  for (var key in params) {\n    if (first === true) {\n      newUrl = newUrl + \"?\" + key + \"=\" + params[key];\n      first = false\n    } else {\n      newUrl = newUrl + \"&\" + key + \"=\" + params[key];\n    }\n  }\n  return newUrl;\n}\n\nfunction getAllUrlParams(url) {\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n  var obj = {};\n  \n  if (queryString) {\n    queryString = queryString.split('#')[0];\n    var arr = queryString.split('&');\n    \n    for (var i = 0; i < arr.length; i++) {\n      var a = arr[i].split('=');\n      var paramName = a[0];\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n      \n      paramName = paramName.toLowerCase();\n      if (typeof paramValue === 'string') {\n        if (paramName != \"lang\")\n          paramValue = paramValue.toLowerCase();\n      }\n      \n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]) obj[key] = [];\n        \n        if (paramName.match(/\\[\\d+\\]$/)) {\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          obj[key].push(paramValue);\n        }\n      } else {\n        if (!obj[paramName]) {\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n  return obj;\n}"]}